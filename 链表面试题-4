单链表实现约瑟夫环

//0，1，3...，n - 1这n个数字排成一个圆圈，
//从数字0开始每次从这个圆圈里删除第m个数字。
//求出这个圆圈里剩下的最后一个数字
//假设0,1,2,3,4这5个数字组成一个圆圈，
//如果我们从数字0开始每次删除第3个数字，
//则删除的前四个数字是2,0,4,1,3。这就是有名的约瑟夫环问题
ListNode* JocephCircle(ListNode* plist1, int k) //k是循环的数字
{
    ListNode* tmp = plist1;

    for(tmp; tmp->next != NULL; tmp=tmp->next)
    {
        ;
    }
    tmp->next = plist1; 
       while (plist1->next != plist1)
    {
        int ret = k;
        while (--ret)
        {
            plist1 = plist1->next;
        }
        tmp = plist1->next;     //删除第k个节点  先把k的next
        //赋值给k 然后将k的next删除即可
        plist1->data = tmp->data;
        plist1->next = tmp->next;
        free(tmp);
    }
    return plist1;
}
